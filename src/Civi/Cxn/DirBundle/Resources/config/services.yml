parameters:
  civi_cxn_dirsvc.path: '%kernel.root_dir%/dirsvc'
  civi_cxn_dirsvc.apps: '%civi_cxn_dirsvc.path%/apps.json'
  civi_cxn_dirsvc.keys: '%civi_cxn_dirsvc.path%/keys.json'
  civi_cxn_dirsvc.csr: '%civi_cxn_dirsvc.path%/cxndir.csr'
  civi_cxn_dirsvc.cert: '%civi_cxn_dirsvc.path%/cxndir.crt'

services:

  ## Maintain a list of externally hosted apps (as a JSON file).
  civi_cxn_dirsvc.remote_app_store:
    class: Civi\Cxn\DirBundle\AppStore\JsonAppStore
    arguments: ['%civi_cxn_dirsvc.apps%']

  ## Maintain an aggregated list of internal and external apps.
  ## In production deployments, one would only have the internal
  ## XOR external list, but for testing/development it's handy to
  ## mix them.
  civi_cxn_dirsvc.agg_app_store:
    class: Civi\Cxn\DirBundle\AppStore\ChainedAppStore
    arguments:
      - [ '@civi_cxn_app.app_store', '@civi_cxn_dirsvc.remote_app_store' ]

  civi_cxn_dirsvc.dirsvc_controller:
    class: Civi\Cxn\DirBundle\Controller\DirSvcController
    arguments: ['@service_container', "@civi_cxn_dirsvc.agg_app_store", "@event_dispatcher"]

  civi_cxn_dirsvc.command.get_command:
    class: Civi\Cxn\DirBundle\Command\GetCommand
    arguments: ["@civi_cxn_dirsvc.agg_app_store"]
    tags:
      - { name: console.command }

  civi_cxn_dirsvc.command.init_command:
    class: Civi\Cxn\DirBundle\Command\InitCommand
    arguments: ["%civi_cxn_dirsvc.keys%", "%civi_cxn_dirsvc.csr%", "%civi_cxn_dirsvc.cert%", "%civi_cxn_dirsvc.apps%"]
    tags:
      - { name: console.command }

  civi_cxn_dirsvc.command.preview_command:
    class: Civi\Cxn\DirBundle\Command\PreviewCommand
    tags:
      - { name: console.command }
